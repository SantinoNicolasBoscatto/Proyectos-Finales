// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServiPryntWeb.Models._Negocio;

#nullable disable

namespace ServiPryntWeb.Migrations
{
    [DbContext(typeof(Negocio))]
    partial class NegocioModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("ServiPryntWeb.Models.Entidades.Marcas", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreMarca")
                        .HasColumnType("TEXT");

                    b.HasKey("IdMarca");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("ServiPryntWeb.Models.Entidades.Productos", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdMarca")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Imagen")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Oferta")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pdf")
                        .HasColumnType("TEXT");

                    b.Property<int>("Precio")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Stock")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdMarca");

                    b.HasIndex("TypeId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("ServiPryntWeb.Models.Entidades.TypeProduct", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TypeName")
                        .HasColumnType("TEXT");

                    b.HasKey("TypeId");

                    b.ToTable("TypesProducts");
                });

            modelBuilder.Entity("ServiPryntWeb.Models.Entidades.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ServiPryntWeb.Models.Entidades.Productos", b =>
                {
                    b.HasOne("ServiPryntWeb.Models.Entidades.Marcas", "Marca")
                        .WithMany("ProductosCollection")
                        .HasForeignKey("IdMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServiPryntWeb.Models.Entidades.TypeProduct", "TypeProduct")
                        .WithMany("ProductosTypeCollection")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");

                    b.Navigation("TypeProduct");
                });

            modelBuilder.Entity("ServiPryntWeb.Models.Entidades.Marcas", b =>
                {
                    b.Navigation("ProductosCollection");
                });

            modelBuilder.Entity("ServiPryntWeb.Models.Entidades.TypeProduct", b =>
                {
                    b.Navigation("ProductosTypeCollection");
                });
#pragma warning restore 612, 618
        }
    }
}
